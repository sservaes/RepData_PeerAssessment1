plot(rnorm(600))
plot(rnorm(600))
abline(lm)
abline()
plot(rnorm(600), abline)
abline(rnorm(600))
abline
?abline
x
X <- rnorm(500)
x
X
plot(X)
abline(X)
abline(lm(X))
hist(rnorm(600))
data <- read.csv("/Volumes/PROMISE_2/users/Servaes_S/Studies/GLUMOD - ABP/Study info/data.csv")
View(data)
View(data)
ebselen <- c(2.905409447, 2.905409447,	2.905409447,	2.905409447,	2.905409447	,2.905409447,	2.905409447	,2.905409447)
mk801 <- c(2.905409447,	2.905409447,	2.905409447,	2.905409447	,2.905409447	2.905409447,	2.905409447,	2.905409447	,2.905409447,	2.76657364)
mk801 <- c(2.905409447,	2.905409447,	2.905409447,	2.905409447	,2.905409447,	2.905409447,	2.905409447,	2.905409447	,2.905409447,	2.76657364)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
rbind(mk801, ebselen)
glugln <- rbind(mk801, ebselen)
glugln <- as.data.frame(glu.gln)
glugln <- as.data.frame(glugln)
colnames(glugln)[1] <- "mean"
colnames(glugln)[2] <- "condition"
glugln$mean <- as.numeric(levels(glugln$mean))
view(glugln)
View(glulgn)
View(glugln)
boxplot(glugln$mean ~ glugln$condition)
ebselen <- c(2.905409447,	4.34971527,	4.591526867,	3.85394049,	4.069004684,	3.80000069,	4.959406633	,4.160842029)
mk801 <- c(2.913526955,	3.43312514,	2.988730907,	3.053356773,	3.836529474,	2.754652737,	4.558991654	,2.680775564,	2.574096877,	2.76657364)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glugln <- rbind(mk801, ebselen)
glugln <- as.data.frame(glugln)
colnames(glugln)[1] <- "mean"
colnames(glugln)[2] <- "condition"
glugln$mean <- as.numeric(levels(glugln$mean))
boxplot(glugln$mean ~ glugln$condition)
points(glugln$mean ~ glugln$condition, pch = 1)
title("Glu/Gln")
ebselen <- c(13.59978,	14.4853,	14.0012,	12.13713,	18.18415,	15.41734,	14.94357,	13.94951)
mk801 <- c(14.91773,	14.28373,	14.16486,	14.49219,	13.78757,	14.02359,	14.97802,	14.51114,	14.24411,	15.31397)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(levels(glutamate$mean))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate")
mean(ebselen)
?mean
mean(glutamate$mean)
ebselen[1]
ebselen[,1]
as.numeric(ebselen[,1])
mean(as.numeric(ebselen[,1]))
mean(as.numeric(mk801[,1]))
View(glutamate)
?boxplot
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(glutamate$mean ~ glutamate$condition, range = 0, pch = 1)
points(mean(glutamate$mean), pch = 0)
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(mean(glutamate$mean), pch = 0)
points(mean(glutamate$mean), pch = 5)
points(mean(glutamate$mean), pch = 10)
points(mean(glutamate$mean), pch = 15)
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(mean(glutamate$mean), pch = 15)
points(mean(glutamate$mean ~ glutamate$condition), pch = 15)
mean(glutamate$mean ~ glutamate$condition)
x <- mean(as.numeric(ebselen[,1]))
y <- mean(as.numeric(mk801[,1]))
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(x, pch = 15)
points(y, pch = 15)
points(c(x,y), pch = 15)
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(c(x,y), pch = 15)
points(glutamate$mean ~ glutamate$condition, range = 0, pch = 1)
x
y
y <- mean(as.numeric(mk801[,1]))
mk801
ebselen
ebselen <- c(13.59978,	14.4853,	14.0012,	12.13713,	18.18415,	15.41734,	14.94357,	13.94951)
mk801 <- c(14.91773,	14.28373,	14.16486,	14.49219,	13.78757,	14.02359,	14.97802,	14.51114,	14.24411,	15.31397)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(levels(glutamate$mean))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate")
mean(ebselen)
y <- mean(as.numeric(mk801[,1]))
x
x <- mean(as.numeric(ebselen[,1]))
y
x
View(glutamate)
ebselen
mk801
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(levels(glutamate$mean))
View(glutamate)
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(levels(glutamate$mean))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(as.character(glutamate$mean))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(as.character(glutamate$mean))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate", ylab = "Concentration (" * mu * "mol/g)")
title("Glutamate", ylab = "Concentration (" * mu ~ "mol/g)")
title("Glutamate", ylab = "Concentration (" * mu, "mol/g)")
title("Glutamate", ylab = "Concentration (" * mu "mol/g)")
title("Glutamate", ylab = expression("Concentration (" * mu * "mol/g)"))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate", ylab = expression("Concentration (" * mu * "mol/g)"))
points(c(x,y), pch = 15)
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate", ylab = expression("Concentration (" * mu * "mol/g)"))
ebselen <- c(13.59978,	14.4853,	14.0012,	12.13713,	18.18415,	15.41734,	14.94357,	13.94951)
mk801 <- c(14.91773,	14.28373,	14.16486,	14.49219,	13.78757,	14.02359,	14.97802,	14.51114,	14.24411,	15.31397)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(as.character(glutamate$mean))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate")
ebselen <- c(4.680848,	3.330172,	3.049356,	3.149278,	4.468943,	4.057194,	3.013177,	3.352569)
mk801 <- c(5.120162	,4.160562,	4.739423,	4.746314,	3.593761,	5.090874,	3.28538,	5.413038,	5.533634,	5.535356)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glutamine <- rbind(mk801, ebselen)
glutamine <- as.data.frame(glutamine)
colnames(glutamine)[1] <- "mean"
colnames(glutamine)[2] <- "condition"
glutamine$mean <- as.numeric(as.character(glutamine$mean))
boxplot(glutamine$mean ~ glutamine$condition)
points(glutamine$mean ~ glutamine$condition, pch = 1)
title("Glutamine", ylab = expression("Concentration (" * mu * "mol/g)"))
ebselen <- c(2.905409447,	4.34971527,	4.591526867	,3.85394049,	4.069004684,	3.80000069,	4.959406633	,4.160842029)
mk801 <- c(2.913526955,	3.43312514,	2.988730907	,3.053356773,	3.836529474,	2.754652737	,4.558991654,	2.680775564	,2.574096877,	2.76657364)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glugln <- rbind(mk801, ebselen)
glugln <- as.data.frame(glugln)
colnames(glugln)[1] <- "mean"
colnames(glugln)[2] <- "condition"
glugln$mean <- as.numeric(as.character(glugln$mean))
boxplot(glugln$mean ~ glugln$condition)
points(glugln$mean ~ glugln$condition, pch = 1)
title("Glu/Gln")
mean(glutamate$mean)
x
y
summary(glutamate)
summary(glutamate$mean)
summary(glutamate$mean ~ glutamate$condition)
summary(glutamate$mean, glutamate$condition)
summary(glutamate$mean by glutamate$condition)
?read.csv
```{r activity}
read.csv(activity.csv)
```
getwd()
setwd("/Users/sservaes/datasciencecoursera")
```{r activity}
read.csv(activity.csv)
```
getwd()
ls
all.files
list.files
list.files()
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
list.files()
```{r activity}
read.csv(activity.csv)
```
```{r activity}
read.csv("activity.csv")
```
activity <- read.csv("activity.csv")
activity <- read.csv("activity.csv")
View(activity)
str(activity)
dir
getwd()
setwd(/Users/sservaes)
setwd("/Users/sservaes")
setwd(dir)
cwd
dirname(sys.frame(1)$ofile)
sys.frame(1)
sys.frame()
sys.frame()$ofile
getSrcDirectory(scriptPath)
getSrcDirectory()
getSrcDirectory(function(x) {x})
getSrcDirectory(function(x) {x})
thisfile()
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
```{r activity}
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
```
View(activity)
str(activity)
summary(activity)
mean(activity$steps, rm.NA = TRUE)
?mean
mean(activity$steps, na.rm = TRUE)
mean(activity$steps, na.rm = FALSE)
mean(activity$steps, na.rm = True)
mean(activity$steps, na.rm = T)
hist(activity)
hist(activity$steps)
hist(activity$steps ~ activity$date)
hist(activity$steps, activity$date)
hist(activity$date, activity$steps)
hist(activity$date ~ activity$steps)
hist(activity$date)
hist(activity$date, breaks = "days")
hist(activity$date, breaks = "days", activity$steps)
hist(activity$date, breaks = "days" ~ activity$steps)
hist(activity$steps, activity$date, breaks = "days")
hist(activity$steps, breaks = "days")
hist(activity$steps)
hist(activity$steps = y)
?hist()
hits(activity$date, breaks = "days", freq = activity$steps)
hits(activity$steps, breaks = activity$date)
hist(activity$steps, breaks = activity$date)
hist(activity$date, breaks = "days", freq = activity$steps)
hist(activity$date, breaks = "days")
hist(activity$date, breaks = "weeks")
hist(activity$date, breaks = "months")
hist(activity$steps)
?aggregate
aggregate(activity$steps ~ activity$date)
aggregate(activity$steps ~ activity$date, fun = sum())
aggregate(activity$steps ~ activity$date, FUN = sum())
aggregate(activity$steps ~ activity$date, FUN = sum
)
steps_day <- aggregate(activity$steps ~ activity$date, FUN = sum)
hist(steps_day)
hist(steps_day$`activity$steps`)
View(steps_day)
hist(steps_day$`activity$steps`, breaks = "days")
hist(steps_day$`activity$steps`, breaks = 5)
hist(steps_day$`activity$steps`, breaks = 1)
hist(steps_day$`activity$steps`, breaks = 10)
hist(steps_day$`activity$steps`, breaks = activity$date)
?hist
count(steps_day$`activity$date`)
length(steps_day$`activity$date`)
hist(steps_day$`activity$steps`, breaks = 53)
hist(steps_day$`activity$steps`[(steps_day$`activity$date`=="x")], "days",
format = "%d %b %y", freq=T, col=rgb(0,0,0,1), axes=T, main="", add=T)
hist(steps_day$`activity$steps`[(steps_day$`activity$date`=="x")], "days",
format = "%d %b %y", freq=T)
hist(steps_day$`activity$steps`[(steps_day$`activity$date`=="x")], "days",
format = "%d %b %y")
hist(steps_day$`activity$steps`[(steps_day$`activity$date`=="x")], breaks = "days",
format = "%d %b %y")
hist(steps_day$`activity$steps`[(steps_day$`activity$date`=="x")], breaks = "days", format = "%d %b %y")
hist(steps_day$`activity$steps`[(steps_day$`activity$date`=="x")], breaks = "days")
hist(steps_day$`activity$steps`[(steps_day$`activity$date`=="x")])
hist(steps_day$`activity$steps`[(steps_day$`activity$date`=="x")])
library(ggplot2)
qplot(steps_day$`activity$steps`)
qplot(steps_day$`activity$steps`, geom = 'histogram')
qplot(steps_day$`activity$steps`, geom = 'histogram')
qplot(steps_day$`activity$steps`,
geom = 'histogram',
xlab = "date")
qplot(steps_day$`activity$steps`,
geom = 'histogram',
xlab = "date",
ylab = "frequency")
qplot(steps_day$`activity$steps`,
geom = 'histogram',
xlab = "Date",
ylab = "Frequency")
qplot(steps_day$`activity$date`,
geom = 'histogram',
xlab = "Date",
ylab = "Frequency")
?qplot
qplot(x = steps_day$`activity$date`, y = steps_day$`activity$steps`
geom = 'histogram',
xlab = "Date",
ylab = "Frequency")
qplot(x = steps_day$`activity$date`,
y = steps_day$`activity$steps`,
geom = 'histogram',
xlab = "Date",
ylab = "Frequency")
?ggplot
ggplot(data = steps_day,
aes(steps_day$`activity$date`, steps_day$`activity$steps`))
ggplot(data = steps_day,
aes(steps_day$`activity$date`, steps_day$`activity$steps`) + geom_histogram(col = "red"))
qplot(x = steps_day$`activity$date`,
y = steps_day$`activity$steps`,
geom = 'histogram',
xlab = "Date",
ylab = "Frequency")
View(steps_day)
hist(steps_day$`activity$date`, y = steps_day$`activity$steps`)
hist(x = steps_day$`activity$date`, y = steps_day$`activity$steps`)
hist(x = steps_day$`activity$date`, breaks = "days" y = steps_day$`activity$steps`)
hist(x = steps_day$`activity$date`, breaks = "days", y = steps_day$`activity$steps`)
hist(x = steps_day$`activity$date`, y = steps_day$`activity$steps`,  breaks = "days",)
hist(steps_day$`activity$steps`, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
mean_steps <- mean(activity$steps, na.rm = T)
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), xlab = "Number of Steps")
mean_steps <- mean(activity$steps, na.rm = T)
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red" xlab = "Number of Steps")
mean_steps <- mean(activity$steps, na.rm = T)
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_steps <- mean(activity$steps, na.rm = T)
median_steps <- median(activity$steps, na.rm = T)
?median
mean_steps <- mean(activity$steps, na.rm = T)
median_steps <- median(activity$steps, na.rm = F)
mean_steps <- mean(activity$steps, na.rm = T)
median_steps <- median(activity$steps, na.rm = T)
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_steps <- mean(steps_day$steps, na.rm = T)
median_steps <- median(steps_day$steps, na.rm = T)
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
View(steps_interval)
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps)
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, type = 1)
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, type = "1")
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, type = "1", main = "Average Number of Steps per Day by Interval" xlab = "Interval", ylab = "Steps")
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, type = "1", main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps")
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps")
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps", type = "1")
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps", type = "l")
max(steps_interval$steps)
which(max(steps_interval$steps))
which(x==max(steps_interval$steps))
which.ax(steps_interval$steps)
which.max(steps_interval$steps)
steps_interval[104]
steps_interval[104,1]
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps", type = "l")
steps_interval[which.max(steps_interval$steps),1]
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps", type = "l")
max_interval <- steps_interval[which.max(steps_interval$steps),1]
is.na(activity$steps)
which(is.na(activity$steps))
length(which(is.na(activity$steps)))
missing_values <- which(is.na(activity$steps)))
length(missing_values)
missing_values <- which(is.na(activity$steps))
length(missing_values)
missing_values <- which(is.na(activity$steps))
length(missing_values)
activity$steps[missing_values]
activity$steps[missing_values] <- 1
activity$steps[missing_values]
activity$steps[missing_values] <- mean_steps
activity$steps[missing_values]
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
activity$steps[missing_values]
View(steps_day)
activity$date[missing_values]
steps_day[activity$date[missing_values]]
[activity$date[missing_values]]
activity$date[missing_values]
missing_dates <- activity$date[missing_values]
which(steps_day$date == missing_dates)
which(steps_day$date = missing_dates)
str(steps_day)
steps_day$date == missing_dates
steps_day$steps == 126
steps_day$date == "2012-10-02"
match(steps_day$date, missing_dates)
which(steps_day$date, missing_dates)
which(steps_day$date == missing_dates)
which(steps_day$date %in% missing_dates)
missing_dates
for i in missing_dates
i
end
?for
()
?for()
for(i in missing_dates)
i
i
missing_dates[1]
which(steps_day$date == missing_dates[1])
which(steps_day$date == "2012-10-03")
which(steps_day$date == missing_dates[2])
which(steps_day$date == "2012-11-30")
which(steps_day$date == missing_dates)
missing_values <- !complete.cases(activity)
missing_values <- !complete.cases(activity)
sum(missing_values)
steps_interval$steps[match(activity$interval, steps_interval$interval)]
[match(activity$interval, steps_interval$interval)]
match(activity$interval, steps_interval$interval)
?match
steps_day$steps[match(activity$date, steps_day$date)]
?transform
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps)), steps_day$steps[match(activity$date, steps_day$date)])
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps)), steps_day$steps[match(activity$date, steps_day$date)], activity$steps)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)]))
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
?ifelse
View(imputed_activity)
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
imputed_activity[as.character(imputed_activity$date) == "2012-10-01", 1] <- 0
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = mean)
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = mean)
mean_imputed <- mean(imputed_days$steps)
median_imputed <- median(imputed_days$steps)
hist(imputed_days$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
View(imputed_days)
steps_by_day_i <- aggregate(steps ~ date, imputed_data, sum)
hist(steps_by_day_i$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
#Create Histogram to show difference.
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="red", xlab="Number of Steps", add=T)
legend("topright", c("Imputed", "Non-imputed"), col=c("blue", "red"), lwd=10)
steps_by_day <- aggregate(steps ~ date, data, sum)
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
rmean <- mean(steps_by_day$steps)
rmedian <- median(steps_by_day$steps)
steps_by_day <- aggregate(steps ~ date, activity, sum)
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
rmean <- mean(steps_by_day$steps)
rmedian <- median(steps_by_day$steps)
steps_by_day_i <- aggregate(steps ~ date, imputed_data, sum)
hist(steps_by_day_i$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
#Create Histogram to show difference.
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="red", xlab="Number of Steps", add=T)
legend("topright", c("Imputed", "Non-imputed"), col=c("blue", "red"), lwd=10)
steps_by_day <- aggregate(steps ~ date, activity, sum)
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
rmean <- mean(steps_by_day$steps)
rmedian <- median(steps_by_day$steps)
steps_by_day_i <- aggregate(steps ~ date, imputed_data, sum)
hist(steps_by_day_i$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
#Create Histogram to show difference.
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="red", xlab="Number of Steps", add=T)
legend("topright", c("Imputed", "Non-imputed"), col=c("blue", "red"), lwd=10)
steps_by_day_i <- aggregate(steps ~ date, imputed_activity, sum)
hist(steps_by_day_i$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
#Create Histogram to show difference.
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="red", xlab="Number of Steps", add=T)
legend("topright", c("Imputed", "Non-imputed"), col=c("blue", "red"), lwd=10)
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(imputed_days$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_imputed <- mean(imputed_days$steps)
median_imputed <- median(imputed_days$steps)
