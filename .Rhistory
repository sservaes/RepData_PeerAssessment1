rbind(mk801, ebselen)
glugln <- rbind(mk801, ebselen)
glugln <- as.data.frame(glu.gln)
glugln <- as.data.frame(glugln)
colnames(glugln)[1] <- "mean"
colnames(glugln)[2] <- "condition"
glugln$mean <- as.numeric(levels(glugln$mean))
view(glugln)
View(glulgn)
View(glugln)
boxplot(glugln$mean ~ glugln$condition)
ebselen <- c(2.905409447,	4.34971527,	4.591526867,	3.85394049,	4.069004684,	3.80000069,	4.959406633	,4.160842029)
mk801 <- c(2.913526955,	3.43312514,	2.988730907,	3.053356773,	3.836529474,	2.754652737,	4.558991654	,2.680775564,	2.574096877,	2.76657364)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glugln <- rbind(mk801, ebselen)
glugln <- as.data.frame(glugln)
colnames(glugln)[1] <- "mean"
colnames(glugln)[2] <- "condition"
glugln$mean <- as.numeric(levels(glugln$mean))
boxplot(glugln$mean ~ glugln$condition)
points(glugln$mean ~ glugln$condition, pch = 1)
title("Glu/Gln")
ebselen <- c(13.59978,	14.4853,	14.0012,	12.13713,	18.18415,	15.41734,	14.94357,	13.94951)
mk801 <- c(14.91773,	14.28373,	14.16486,	14.49219,	13.78757,	14.02359,	14.97802,	14.51114,	14.24411,	15.31397)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(levels(glutamate$mean))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate")
mean(ebselen)
?mean
mean(glutamate$mean)
ebselen[1]
ebselen[,1]
as.numeric(ebselen[,1])
mean(as.numeric(ebselen[,1]))
mean(as.numeric(mk801[,1]))
View(glutamate)
?boxplot
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(glutamate$mean ~ glutamate$condition, range = 0, pch = 1)
points(mean(glutamate$mean), pch = 0)
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(mean(glutamate$mean), pch = 0)
points(mean(glutamate$mean), pch = 5)
points(mean(glutamate$mean), pch = 10)
points(mean(glutamate$mean), pch = 15)
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(mean(glutamate$mean), pch = 15)
points(mean(glutamate$mean ~ glutamate$condition), pch = 15)
mean(glutamate$mean ~ glutamate$condition)
x <- mean(as.numeric(ebselen[,1]))
y <- mean(as.numeric(mk801[,1]))
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(x, pch = 15)
points(y, pch = 15)
points(c(x,y), pch = 15)
boxplot(glutamate$mean ~ glutamate$condition, range = 0)
points(c(x,y), pch = 15)
points(glutamate$mean ~ glutamate$condition, range = 0, pch = 1)
x
y
y <- mean(as.numeric(mk801[,1]))
mk801
ebselen
ebselen <- c(13.59978,	14.4853,	14.0012,	12.13713,	18.18415,	15.41734,	14.94357,	13.94951)
mk801 <- c(14.91773,	14.28373,	14.16486,	14.49219,	13.78757,	14.02359,	14.97802,	14.51114,	14.24411,	15.31397)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(levels(glutamate$mean))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate")
mean(ebselen)
y <- mean(as.numeric(mk801[,1]))
x
x <- mean(as.numeric(ebselen[,1]))
y
x
View(glutamate)
ebselen
mk801
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(levels(glutamate$mean))
View(glutamate)
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(levels(glutamate$mean))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(as.character(glutamate$mean))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(as.character(glutamate$mean))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate", ylab = "Concentration (" * mu * "mol/g)")
title("Glutamate", ylab = "Concentration (" * mu ~ "mol/g)")
title("Glutamate", ylab = "Concentration (" * mu, "mol/g)")
title("Glutamate", ylab = "Concentration (" * mu "mol/g)")
title("Glutamate", ylab = expression("Concentration (" * mu * "mol/g)"))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate", ylab = expression("Concentration (" * mu * "mol/g)"))
points(c(x,y), pch = 15)
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate", ylab = expression("Concentration (" * mu * "mol/g)"))
ebselen <- c(13.59978,	14.4853,	14.0012,	12.13713,	18.18415,	15.41734,	14.94357,	13.94951)
mk801 <- c(14.91773,	14.28373,	14.16486,	14.49219,	13.78757,	14.02359,	14.97802,	14.51114,	14.24411,	15.31397)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glutamate <- rbind(mk801, ebselen)
glutamate <- as.data.frame(glutamate)
colnames(glutamate)[1] <- "mean"
colnames(glutamate)[2] <- "condition"
glutamate$mean <- as.numeric(as.character(glutamate$mean))
boxplot(glutamate$mean ~ glutamate$condition)
points(glutamate$mean ~ glutamate$condition, pch = 1)
title("Glutamate")
ebselen <- c(4.680848,	3.330172,	3.049356,	3.149278,	4.468943,	4.057194,	3.013177,	3.352569)
mk801 <- c(5.120162	,4.160562,	4.739423,	4.746314,	3.593761,	5.090874,	3.28538,	5.413038,	5.533634,	5.535356)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glutamine <- rbind(mk801, ebselen)
glutamine <- as.data.frame(glutamine)
colnames(glutamine)[1] <- "mean"
colnames(glutamine)[2] <- "condition"
glutamine$mean <- as.numeric(as.character(glutamine$mean))
boxplot(glutamine$mean ~ glutamine$condition)
points(glutamine$mean ~ glutamine$condition, pch = 1)
title("Glutamine", ylab = expression("Concentration (" * mu * "mol/g)"))
ebselen <- c(2.905409447,	4.34971527,	4.591526867	,3.85394049,	4.069004684,	3.80000069,	4.959406633	,4.160842029)
mk801 <- c(2.913526955,	3.43312514,	2.988730907	,3.053356773,	3.836529474,	2.754652737	,4.558991654,	2.680775564	,2.574096877,	2.76657364)
ebselen <- cbind(ebselen, rep("Ebselen", 8))
mk801 <- cbind(mk801, rep("MK801", 10))
glugln <- rbind(mk801, ebselen)
glugln <- as.data.frame(glugln)
colnames(glugln)[1] <- "mean"
colnames(glugln)[2] <- "condition"
glugln$mean <- as.numeric(as.character(glugln$mean))
boxplot(glugln$mean ~ glugln$condition)
points(glugln$mean ~ glugln$condition, pch = 1)
title("Glu/Gln")
mean(glutamate$mean)
x
y
summary(glutamate)
summary(glutamate$mean)
summary(glutamate$mean ~ glutamate$condition)
summary(glutamate$mean, glutamate$condition)
summary(glutamate$mean by glutamate$condition)
?weekdays()
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_steps <- mean(steps_day$steps, na.rm = T)
median_steps <- median(steps_day$steps, na.rm = T)
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_steps <- mean(steps_day$steps, na.rm = T)
median_steps <- median(steps_day$steps, na.rm = T)
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps", type = "l")
max_interval <- steps_interval[which.max(steps_interval$steps),1]
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
imputed_activity[as.character(imputed_activity$date) == "2012-10-01", 1] <- 0
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(imputed_days$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_imputed <- mean(imputed_days$steps)
median_imputed <- median(imputed_days$steps)
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
imputed_activity[as.character(imputed_activity$date) == "2012-10-01", 1] <- 0
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps")
hist(imputed_days$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_imputed <- mean(imputed_days$steps)
median_imputed <- median(imputed_days$steps)
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
imputed_activity[as.character(imputed_activity$date) == "2012-10-01", 1] <- 0
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(imputed_days$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_imputed <- mean(imputed_days$steps)
median_imputed <- median(imputed_days$steps)
activity$date
activity$date[1]
weekdays(activity$date[1])
weekdays_list <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekend_list <- c("Saturday", "Sunday")
"Monday" %in% weekdays_list
activity_extended <- transform(activity, weekday = 3)
View(activity_extended)
activity_extended <- transform(activity, weekday = ifelse(weekdays(activity$date) %in% weekend_list, "TRUE", "FALSE"))
View(activity_extended)
activity_extended <- transform(activity, weekday = ifelse(weekdays(activity$date) %in% weekend_list, "FALSE", "TRUE"))
weekdays(activity$date)[1] %in% weekend_list
weekend_list <- c("Saturday", "Sunday")
activity_extended <- transform(activity, weekday = ifelse(weekdays(activity$date) %in% weekend_list, "FALSE", "TRUE"))
activity_extended <- transform(activity, weekend = ifelse(weekdays(activity$date) %in% weekend_list, "TRUE", "FALSE"))
View(activity_extended)
weekend_list <- c("Saturday", "Sunday")
activity_extended <- transform(activity, weekday = ifelse(weekdays(activity$date) %in% weekend_list, "FALSE", "TRUE"))
activity_extended <- transform(activity_extended, weekend = ifelse(weekdays(activity$date) %in% weekend_list, "TRUE", "FALSE"))
View(activity_extended)
weekend_list <- c("Saturday", "Sunday")
activity_extended <- transform(activity, weekday = ifelse(weekdays(activity$date) %in% weekend_list, "Weekday", "Weekend"))
View(activity_extended)
weekend_list <- c("Saturday", "Sunday")
activity_extended <- transform(activity, weekday = ifelse(weekdays(activity$date) %in% weekend_list, "Weekend", "Weekday"))
weekend_list <- c("Saturday", "Sunday")
activity_extended <- transform(activity, weekday = ifelse(weekdays(activity$date) %in% weekend_list, "Weekend", "Weekday"))
activity_extended$weekday <- as.factor(activity_extended$weekday)
str(activity_extended)
View(steps_interval)
?aggregate
weekend_list <- c("Saturday", "Sunday")
activity_extended <- transform(imputed_activity, dayofweek = as.factor(ifelse(weekdays(imputed_activity$date) %in% weekend_list, "Weekend", "Weekday")))
weekend_list <- c("Saturday", "Sunday")
imputed_activity$dayofweek <- as.factor(ifelse(weekdays(imputed_activity$date) %in% weekend_list, "Weekend", "Weekday"))
View(imputed_activity)
View(imputed_activity)
weekend_list <- c("Saturday", "Sunday")
imputed_activity$dayofweek <- as.factor(ifelse(weekdays(imputed_activity$date) %in% weekend_list, "Weekend", "Weekday"))
steps_interval_dow <- aggregate(steps ~ interval + dayofweek, imputed_activity, FUN = mean)
View(steps_interval_dow)
plot(steps_interval_dow$steps ~ steps_interval_dow$dayofweek)
plot(steps_interval_dow$steps ~ steps_interval_dow$interval)
plot(steps_interval_dow$steps ~ steps_interval_dow$interval|steps_interval_dow)
plot(steps_interval_dow$steps ~ steps_interval_dow$interval+steps_interval_dow)
plot(steps_interval_dow$steps ~ steps_interval_dow$interval + steps_interval_dow)
xyplot(steps_interval_dow$steps ~ steps_interval_dow$interval|steps_interval_dow)
plot(steps_interval_dow$steps[steps_interval_dow$dayofweek=="Weekday"] ~ steps_interval_dow$interval)
library lattice
library(lattice)
?xyplot
xyplot(steps_interval_dow$steps ~ steps_interval_dow$interval|steps_interval_dow)
xyplot(steps_interval_dow$steps ~ steps_interval_dow$interval|steps_interval_dow,layout=c(1,2), type="l")
xyplot(steps_interval_dow$steps ~ steps_interval_dow$interval|steps_interval_dow$dayofweek,layout=c(1,2), type="l")
xyplot(steps_interval_dow$steps ~ steps_interval_dow$interval|steps_interval_dow$dayofweek, type="l")
xyplot(steps_interval_dow$steps ~ steps_interval_dow$interval|steps_interval_dow$dayofweek, type="l", layout=c(1,2))
xyplot(steps_interval_dow$steps ~ steps_interval_dow$interval|steps_interval_dow$dayofweek, type="l", layout=c(1,2), xlab = "Interval", ylab = "Steps")
mean(steps_interval_dow$steps)
mean(steps_interval_dow$dayofweek)
mean(steps_interval_dow$steps)
View(imputed_days)
View(steps_interval)
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
if(!file.exists("getdata-projectfiles-UCI HAR Dataset.zip")) {
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
unzip(temp)
unlink(temp)
}
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
if(!file.exists("activity.zip")) {
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
unzip(temp)
unlink(temp)
}
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
test
?long
?float
?median
?scipen
??scipen
sum(imputed_days$steps)
sum(steps_day$steps)
View(activity)
length(missing_values)
sum(missing_values)
View(imputed_activity)
View(imputed_days)
View(steps_day)
!complete.cases(imputed_activity)
imputed_activity[9995]
imputed_activity[9995,1]
View(imputed_activity)
View(activity)
View(steps_day)
mean_steps <- mean(steps_day$steps, na.rm = F)
View(steps_day)
?aggregate
steps_day <- aggregate(steps ~ date, activity, FUN = sum, na.pass)
steps_day <- aggregate(steps ~ date, activity, FUN = sum, na.action = na.pass)
View(steps_day)
mean_steps <- mean(steps_day$steps, na.rm = T)
steps_day$steps == "NA"
is.na(steps_day$steps)
steps_days$steps[is.na(steps_day$steps)]
steps_day$steps[is.na(steps_day$steps)]
steps_day$steps[is.na(steps_day$steps)] <- 0
View(steps_day)
!complete.cases(imputed_activity)
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
!complete.cases(imputed_activity)
View(imputed_activity)
sum(!complete.cases(imputed_activity))
sum(complete.cases(imputed_activity))
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
#imputed_days$steps[is.na(imputed_days$steps)] <- 0
hist(imputed_days$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_days$steps)
median_imputed <- median(imputed_days$steps)
View(imputed_days)
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
#imputed_days$steps[is.na(imputed_days$steps)] <- 0
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps")
hist(imputed_days$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_days$steps)
median_imputed <- median(imputed_days$steps)
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
View(imputed_activity)
View(activity)
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
if(!file.exists("activity.zip")) {
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
unzip(temp)
unlink(temp)
}
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_steps <- mean(steps_day$steps, na.rm = T)
median_steps <- median(steps_day$steps, na.rm = T)
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps", type = "l")
max_interval <- steps_interval[which.max(steps_interval$steps),1]
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_day$steps[match(activity$date, steps_day$date)], activity$steps))
View(imputed_activity)
sum(!complete.cases(imputed_activity))
imputed_activity$steps[is.na(imputed_activity$steps)] <- 0
sum(!complete.cases(imputed_activity))
imputed_days <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
#imputed_days$steps[is.na(imputed_days$steps)] <- 0
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps")
hist(imputed_days$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_days$steps)
median_imputed <- median(imputed_days$steps)
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_interval$steps[match(activity$interval, steps_interval$steps)], activity$steps))
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps")
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps", add = TRUE)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
View(imputed_interval)
sum(!completed.cases(imputed_activity))
sum(!complete.cases(imputed_activity))
sum(!complete.cases(activity))
imputed_activity$steps[is.na(imputed_activity$steps)] <- 0
sum(!complete.cases(activity))
sum(!complete.cases(imputed_activity))
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum, na.action = na.pass)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
if(!file.exists("activity.zip")) {
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
unzip(temp)
unlink(temp)
}
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_steps <- mean(steps_day$steps, na.rm = T)
median_steps <- median(steps_day$steps, na.rm = T)
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
setwd("/Users/sservaes/datasciencecoursera/RepData_PeerAssessment1")
if(!file.exists("activity.zip")) {
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
unzip(temp)
unlink(temp)
}
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_steps <- mean(steps_day$steps, na.rm = T)
median_steps <- median(steps_day$steps, na.rm = T)
steps_day <- aggregate(steps ~ date, activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
mean_steps <- mean(steps_day$steps, na.rm = T)
median_steps <- median(steps_day$steps, na.rm = T)
steps_interval <- aggregate(steps ~ interval, activity, FUN = mean)
plot(steps_interval$interval, steps_interval$steps, main = "Average Number of Steps per Day by Interval", xlab = "Interval", ylab = "Steps", type = "l")
max_interval <- steps_interval[which.max(steps_interval$steps),1]
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_interval$steps[match(activity$interval, steps_interval$steps)], activity$steps))
steps_interval$steps[match(activity$interval, steps_interval$steps)]
missing_values <- !complete.cases(activity)
sum(missing_values)
imputed_activity <- transform(activity, steps = ifelse(is.na(activity$steps), steps_interval$steps[match(activity$interval, steps_interval$interval)], activity$steps))
sum(!complete.cases(imputed_activity))
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps", add = T)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
imputed_activity[as.character(imputed_activity$date) == "2012-10-01", 1] <- 0
imputed_interval <- aggregate(steps ~ date, imputed_activity, FUN = sum)
hist(imputed_interval$steps, main = paste("Total Steps Each Day"), col = "red", xlab = "Number of Steps")
hist(steps_day$steps, main = paste("Total Steps Each Day"), col = "blue", xlab = "Number of Steps", add = TRUE)
legend("topright", c("Imputed", "Non-imputed"), col=c("red", "blue"), lwd=10)
mean_imputed <- mean(imputed_interval$steps)
median_imputed <- median(imputed_interval$steps)
View(activity)
View(steps_day)
